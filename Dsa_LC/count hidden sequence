class Solution {
    public int numberOfArrays(int[] differences, int lower, int upper) {
        // int c=0;
        // for (int start=lower;start<=upper;start++){
        //     int current=start;
        //     boolean isvalid =true;

        //     for (int diff:differences){
        //         current +=diff;

        //         if(current<lower ||current>upper ){
        //             isvalid=false;break;
        //         }
                
        //     }
        //     if(isvalid){
        //             c++;
        //         }
        // }
        // return c;
       long prefixSum = 0;
        long minPrefixSum = 0;
        long maxPrefixSum = 0;

        for (int i = 0; i < differences.length; i++) {
            prefixSum += differences[i];
            maxPrefixSum = Math.max(maxPrefixSum, prefixSum);
            minPrefixSum = Math.min(minPrefixSum, prefixSum);
        }

        long minX = lower - minPrefixSum;
        long maxX = upper - maxPrefixSum;

        long totalCount = maxX - minX + 1;

        if (totalCount < 0) {
            return 0;
        }

        return (int) totalCount;
    }
}
