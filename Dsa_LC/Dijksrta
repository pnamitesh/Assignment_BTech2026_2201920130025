import java.util.*;
public class Dijkstra {
    static class Edge{
        int src;
        int dest;
        int w;
        Edge(int x,int y,int z){
            this.src=x;
            this.dest=y;
            this.w=z;
        }
    }
    static class Pair implements Comparable<Pair>{
        int node;
        int dist;
        public Pair(int n,int d){
            this.node=n;
            this.dist=d;
        }
        @Override

        public int compareTo(Pair p2){
            return this.dist-p2.dist;
        }
    }
    public static void dijkstra(ArrayList<Edge> []graph,int ve,int src){
        PriorityQueue<Pair> pq=new PriorityQueue<>();
        int dist[]=new int[ve];

        for(int i=0;i<ve;i++){
            if(i!=src){
                dist[i]=Integer.MAX_VALUE;
            }
        }
        boolean vis[]=new boolean[ve];
        pq.add(new Pair(0,0));
        while(!pq.isEmpty()){
            Pair curr=pq.remove();
            if(!vis[curr.node]){
                vis[curr.node]=true;
                for(int i=0;i<graph[curr.node].size();i++){
                    Edge e=graph[curr.node].get(i);
                    int u=e.src;
                    int v=e.dest;
                    if(dist[u]+e.w < dist[v]){
                        dist[v]=dist[u]+e.w;
                        pq.add(new Pair(v,dist[v]));
                    }

                }
            }
        }
        for(int i=0;i<ve;i++){
            System.out.print(dist[i]+" ");
        }
        System.out.println();


    }
    public static void create_graph(ArrayList<Edge> []graph){

        for(int i=0;i<graph.length;i++){
            graph[i]=new ArrayList<Edge>();
        }
        graph[0].add(new Edge(0,1,2));
        graph[1].add(new Edge(0,2,4));
        graph[1].add(new Edge(1,3,7));
        graph[2].add(new Edge(1,2,1));
        graph[2].add(new Edge(2,4,3));
        graph[2].add(new Edge(3,5,1));
        graph[3].add(new Edge(4,3,2));
        graph[3].add(new Edge(4,4,5));

    }
    public static void main(String[] args) {
        int ve=6;
        ArrayList<Edge> []graph=new ArrayList[ve];
        create_graph(graph);
        dijkstra(graph, ve, 0);// O(E+ElogV)

    }
}
