import java.util.*;

public class Topologicalsort {

    static class Edge {
        int src;
        int dest;

        Edge(int x, int y) {
            this.src = x;
            this.dest = y;
        }
    }

    public static void creategraph(ArrayList<Edge> graph[]) {
        for (int i = 0; i < graph.length; i++) {
            graph[i] = new ArrayList<>();
        }

        graph[0].add(new Edge(0, 2));
        // graph[1].add(new Edge(1, 2));
        graph[1].add(new Edge(1, 3));
        graph[2].add(new Edge(2, 1));
        graph[3].add(new Edge(3, 4));
    }

    public static void topo_sort(ArrayList<Edge>[] graph, int curr, boolean vis[], Stack<Integer> stack) {
        vis[curr] = true;

        for (int i = 0; i < graph[curr].size(); i++) {
            Edge e = graph[curr].get(i);
            if (!vis[e.dest]) {
                topo_sort(graph, e.dest, vis, stack);
            }
        }

        stack.push(curr);
    }

    public static void main(String[] args) {
        int v = 5; 

        ArrayList<Edge> graph[] = new ArrayList[v];
        boolean vis[] = new boolean[v];
        creategraph(graph);

        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < v; i++) {
            if (!vis[i]) {
                topo_sort(graph, i, vis, stack);
            }
        }

        while (!stack.isEmpty()) {
            System.out.print(stack.pop() + " ");
        }

        System.out.println();
    }
}
